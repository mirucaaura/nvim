[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
set background=dark
'''

[[plugins]]
repo = 'tomasiser/vim-code-dark'

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_post_source = '''
call defx#custom#otion('_', {
  \ 'winwidth': 40,
  \ 'split': 'vertical',
  \ 'direction': 'topleft',
  \ 'show_ignored_files': 1,
  \ 'buffer_name': 'exproler',
  \ 'toggle': 1,
  \ 'resume': 1,
  \ 'columns': 'indent:icons:filename:mark',
  \ })
'''

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build = 'sh -c "cd app && npm install"'
hook_add = '''
let g:mkdp_open_to_the_world = 1
let g:mkdp_browser = 'chrome'
let g:mkdp_filetypes = ['markdown']
'''

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
" show hidden files
let g:fern#default_hidden=1 
nnoremap <C-n> :Fern . -reveal=% -drawer -width=30<CR>
" <Leader> = Space
let mapleader = "\<Space>"
" Set Fern . as Space+e
nnoremap <silent> <Leader>e :<C-u>Fern . -reveal=% -drawer<CR>
'''

[[plugins]]
repo = 'lambdalisue/fern-hijack.vim'

[[plugins]]
repo = 'yuki-yano/fern-preview.vim'
hook_add = '''
function! s:fern_settings() abort
  nmap <silent> <buffer> p     <Plug>(fern-action-preview:toggle)
  nmap <silent> <buffer> <C-p> <Plug>(fern-action-preview:auto:toggle)
  nmap <silent> <buffer> <C-d> <Plug>(fern-action-preview:scroll:down:half)
  nmap <silent> <buffer> <C-u> <Plug>(fern-action-preview:scroll:up:half)
endfunction

augroup fern-settings
  autocmd!
  autocmd FileType fern call s:fern_settings()
augroup END
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
hook_add = '''
	let g:fern#renderer = 'nerdfont'
'''

[[plugins]]
repo = 'antoinemadec/FixCursorHold.nvim'

[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'
hook_add = '''
	augroup my-glyph-palette
		autocmd! *
		autocmd FileType fern call glyph_palette#apply()
		autocmd FileType nerdtree,startify call glyph_palette#apply()
	augroup END
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'vim-python/python-syntax'

[[plugins]]
repo = 'cohama/lexima.vim'
hook_add = '''
let g:lexima_enable_newline_rules = 1
'''

# language server
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = '''
let g:coc_global_extensions = ['coc-json', 'coc-toml']
'''

# git command
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
nnoremap <silent> gs :Git status<CR>
nnoremap <silent> gps :Git push<CR>
nnoremap <silent> gpl :Git pull<CR>
" nnoremap <silent> gc :Git commit<CR>
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline_theme = 'codedark'
let g:airline#extensions#default#layout = [
  \ [ 'a', 'b', 'c' ],
  \ ['z']
  \ ]
let g:airline_section_c = '%t %M'
let g:airline_section_z = get(g:, 'airline_linecolumn_prefix', '').'%3l:%-2v'
let g:airline#extensions#hunks#non_zero_only = 1 
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline#extensions#tabline#show_buffers = 1
let g:airline#extensions#tabline#show_splits = 0
let g:airline#extensions#tabline#show_tabs = 1
let g:airline#extensions#tabline#show_tab_nr = 0
let g:airline#extensions#tabline#show_tab_type = 1
let g:airline#extensions#tabline#show_close_button = 0
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
let g:airline#extensions#tabline#enabled = 1
'''

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-commentary'
